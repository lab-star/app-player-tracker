{"ast":null,"code":"var _jsxFileName = \"/home/abdulzaf/github/development/star-lab/app-player-tracker/src/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [theme, setTheme] = useState(() => {\n    // Read theme from localStorage on initial load\n    const savedTheme = localStorage.getItem('theme');\n    // Default to 'light' if no theme is saved\n    return savedTheme || 'dark';\n  });\n\n  // Use useEffect to apply the data attribute to the document element\n  useEffect(() => {\n    document.documentElement.setAttribute('data-bs-theme', theme);\n    // Save theme preference to localStorage\n    localStorage.setItem('theme', theme);\n  }, [theme]); // Re-run effect whenever theme changes\n\n  // Function to toggle the theme\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"btNNZWplJYaaS4B7eNSDEr1SrlU=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","ThemeProvider","children","_s2","theme","setTheme","savedTheme","localStorage","getItem","document","documentElement","setAttribute","setItem","toggleTheme","prevTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abdulzaf/github/development/star-lab/app-player-tracker/src/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(() => {\n    // Read theme from localStorage on initial load\n    const savedTheme = localStorage.getItem('theme');\n    // Default to 'light' if no theme is saved\n    return savedTheme || 'dark';\n  });\n\n  // Use useEffect to apply the data attribute to the document element\n  useEffect(() => {\n    document.documentElement.setAttribute('data-bs-theme', theme);\n    // Save theme preference to localStorage\n    localStorage.setItem('theme', theme);\n  }, [theme]); // Re-run effect whenever theme changes\n\n  // Function to toggle the theme\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,YAAY,CAAC;AAAA;AAACE,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,MAAM;IACvC;IACA,MAAMY,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD;IACA,OAAOF,UAAU,IAAI,MAAM;EAC7B,CAAC,CAAC;;EAEF;EACAX,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,eAAe,EAAEP,KAAK,CAAC;IAC7D;IACAG,YAAY,CAACK,OAAO,CAAC,OAAO,EAAER,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb;EACA,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBR,QAAQ,CAAES,SAAS,IAAMA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACrE,CAAC;EAED,oBACEjB,OAAA,CAACC,YAAY,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEZ,KAAK;MAAES;IAAY,CAAE;IAAAX,QAAA,EAClDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACjB,GAAA,CAzBWF,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}